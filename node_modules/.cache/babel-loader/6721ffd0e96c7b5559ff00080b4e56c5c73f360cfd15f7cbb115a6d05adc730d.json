{"ast":null,"code":"import React,{useState}from'react';import'./Template.css';import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function Template(){const[storyText,setStoryText]=useState('');const[selectedCharacter,setSelectedCharacter]=useState(null);const[numImages,setNumImages]=useState(1);const[errorMessage,setErrorMessage]=useState('');const navigate=useNavigate();const characterTemplates=[{id:'cockatiel',title:'Cockatiel',description:'Весёлые и неугомонные попугаи. Прорекламируют ваш продукт, если вы, конечно, их поймаете.'},{id:'cat',title:'Cat',description:'Ловкий, пушистый и абсолютно не заинтересован в вашем проекте. Но выглядит шикарно, признайте!'},{id:'black_bear',title:'Black bear',description:'Интроверт из мира медведей. Теперь он путешествует и даже пишет свою книгу. Раньше проживал в России.'},{id:'raven',title:'Raven',description:'Ворон-минималист. Немногословен. Оно и понятно, ведь птицы не говорят. Самое главное, что он здесь.'},{id:'tiger',title:'Tiger',description:'УУверенный, красивый и всё такой же опасный. Харизма на максималках. Хищник, инфлюенсер и икона стиля.'}];const handleSubmit=async()=>{if(!storyText.trim()){setErrorMessage('Пожалуйста, введите сюжет.');return;}if(!selectedCharacter){setErrorMessage('Пожалуйста, выберите персонажа.');return;}setErrorMessage('');try{const response=await fetch('http://storysight.ru/generate-comic',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({prompt:storyText,character_name:selectedCharacter,num_images:numImages})});if(!response.ok)throw new Error('Ошибка при генерации.');const data=await response.json();const imageBase64List=data.images.map(img=>\"data:image/png;base64,\".concat(img));navigate('/result-main',{state:{images:imageBase64List,storyline:data.storyline,prompts:data.prompts}});}catch(error){console.error('Ошибка:',error);setErrorMessage('Произошла ошибка при генерации. Проверьте подключение и попробуйте снова.');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"choise-wrapper\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"choise-heading\",children:\"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0439\\u0442\\u0435 \\u0441\\u0432\\u043E\\u0439 \\u0441\\u0442\\u043E\\u0440\\u0438\\u0442\\u0435\\u043B\\u043B\\u0438\\u043D\\u0433\"}),/*#__PURE__*/_jsx(\"textarea\",{className:\"story-textarea\",placeholder:\"\\u041D\\u0430\\u043F\\u0438\\u0448\\u0438\\u0442\\u0435 \\u0437\\u0434\\u0435\\u0441\\u044C \\u043D\\u0435\\u0431\\u043E\\u043B\\u044C\\u0448\\u043E\\u0439 \\u0441\\u044E\\u0436\\u0435\\u0442 \\u0432\\u0430\\u0448\\u0435\\u0439 \\u0438\\u0441\\u0442\\u043E\\u0440\\u0438\\u0438...\",value:storyText,onChange:e=>setStoryText(e.target.value)}),/*#__PURE__*/_jsx(\"div\",{className:\"character-grid\",children:characterTemplates.map(template=>/*#__PURE__*/_jsx(\"div\",{className:\"character-card-container \".concat(selectedCharacter===template.id?'selected':''),onClick:()=>setSelectedCharacter(template.id),children:/*#__PURE__*/_jsxs(\"div\",{className:\"character-card-inner\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"character-card-front\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"/images/\".concat(template.id,\".jpg\"),alt:template.title,className:\"character-img\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"character-title\",children:template.title})]}),/*#__PURE__*/_jsx(\"div\",{className:\"character-card-back\",children:/*#__PURE__*/_jsx(\"p\",{children:template.description})})]})},template.id))}),/*#__PURE__*/_jsxs(\"div\",{className:\"slider-wrapper\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"numImages\",className:\"slider-label\",children:[\"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0439: \",numImages]}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",id:\"numImages\",min:\"1\",max:\"8\",value:numImages,onChange:e=>setNumImages(parseInt(e.target.value)),className:\"slider\"})]}),errorMessage&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:errorMessage}),/*#__PURE__*/_jsx(\"button\",{className:\"generate-btn\",onClick:handleSubmit,children:\"\\u0421\\u0433\\u0435\\u043D\\u0435\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043A\\u043E\\u043C\\u0438\\u043A\\u0441\"}),/*#__PURE__*/_jsx(\"button\",{className:\"back-btn\",onClick:()=>navigate(\"/create-choice\"),children:\"\\u041D\\u0430\\u0437\\u0430\\u0434\"})]});}","map":{"version":3,"names":["React","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","Template","storyText","setStoryText","selectedCharacter","setSelectedCharacter","numImages","setNumImages","errorMessage","setErrorMessage","navigate","characterTemplates","id","title","description","handleSubmit","trim","response","fetch","method","headers","body","JSON","stringify","prompt","character_name","num_images","ok","Error","data","json","imageBase64List","images","map","img","concat","state","storyline","prompts","error","console","className","children","placeholder","value","onChange","e","target","template","onClick","src","alt","htmlFor","type","min","max","parseInt"],"sources":["/var/www/storysight/src/pages/Template.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Template.css';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function Template() {\n    const [storyText, setStoryText] = useState('');\n    const [selectedCharacter, setSelectedCharacter] = useState(null);\n    const [numImages, setNumImages] = useState(1);\n    const [errorMessage, setErrorMessage] = useState('');\n    const navigate = useNavigate();\n\n    const characterTemplates = [\n        { id: 'cockatiel', title: 'Cockatiel', description: 'Весёлые и неугомонные попугаи. Прорекламируют ваш продукт, если вы, конечно, их поймаете.' },\n        { id: 'cat', title: 'Cat', description: 'Ловкий, пушистый и абсолютно не заинтересован в вашем проекте. Но выглядит шикарно, признайте!' },\n        { id: 'black_bear', title: 'Black bear', description: 'Интроверт из мира медведей. Теперь он путешествует и даже пишет свою книгу. Раньше проживал в России.' },\n        { id: 'raven', title: 'Raven', description: 'Ворон-минималист. Немногословен. Оно и понятно, ведь птицы не говорят. Самое главное, что он здесь.' },\n        { id: 'tiger', title: 'Tiger', description: 'УУверенный, красивый и всё такой же опасный. Харизма на максималках. Хищник, инфлюенсер и икона стиля.' },\n    ];\n\n    const handleSubmit = async () => {\n        if (!storyText.trim()) {\n            setErrorMessage('Пожалуйста, введите сюжет.');\n            return;\n        }\n        if (!selectedCharacter) {\n            setErrorMessage('Пожалуйста, выберите персонажа.');\n            return;\n        }\n\n        setErrorMessage('');\n\n        try {\n            const response = await fetch('http://storysight.ru/generate-comic', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    prompt: storyText,\n                    character_name: selectedCharacter,\n                    num_images: numImages,\n                }),\n            });\n\n            if (!response.ok) throw new Error('Ошибка при генерации.');\n\n            const data = await response.json();\n            const imageBase64List = data.images.map((img) => `data:image/png;base64,${img}`);\n\n            navigate('/result-main', {\n                state: {\n                    images: imageBase64List,\n                    storyline: data.storyline,\n                    prompts: data.prompts\n                }\n            });\n        } catch (error) {\n            console.error('Ошибка:', error);\n            setErrorMessage('Произошла ошибка при генерации. Проверьте подключение и попробуйте снова.');\n        }\n    };\n\n    return (\n        <div className=\"choise-wrapper\">\n            <h1 className=\"choise-heading\">Создайте свой сторителлинг</h1>\n\n            <textarea\n                className=\"story-textarea\"\n                placeholder=\"Напишите здесь небольшой сюжет вашей истории...\"\n                value={storyText}\n                onChange={(e) => setStoryText(e.target.value)}\n            />\n\n            <div className=\"character-grid\">\n                {characterTemplates.map((template) => (\n                    <div\n                        key={template.id}\n                        className={`character-card-container ${selectedCharacter === template.id ? 'selected' : ''}`}\n                        onClick={() => setSelectedCharacter(template.id)}\n                    >\n                        <div className=\"character-card-inner\">\n                            <div className=\"character-card-front\">\n                                <img\n                                    src={`/images/${template.id}.jpg`}\n                                    alt={template.title}\n                                    className=\"character-img\"\n                                />\n                                <h3 className=\"character-title\">{template.title}</h3>\n                            </div>\n                            <div className=\"character-card-back\">\n                                <p>{template.description}</p>\n                            </div>\n                        </div>\n                    </div>\n                ))}\n            </div>\n\n            <div className=\"slider-wrapper\">\n                <label htmlFor=\"numImages\" className=\"slider-label\">\n                    Количество изображений: {numImages}\n                </label>\n                <input\n                    type=\"range\"\n                    id=\"numImages\"\n                    min=\"1\"\n                    max=\"8\"\n                    value={numImages}\n                    onChange={(e) => setNumImages(parseInt(e.target.value))}\n                    className=\"slider\"\n                />\n            </div>\n\n            {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\n\n            <button className=\"generate-btn\" onClick={handleSubmit}>\n                Сгенерировать комикс\n            </button>\n\n            <button className=\"back-btn\" onClick={() => navigate(\"/create-choice\")}>\n                Назад\n            </button>\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
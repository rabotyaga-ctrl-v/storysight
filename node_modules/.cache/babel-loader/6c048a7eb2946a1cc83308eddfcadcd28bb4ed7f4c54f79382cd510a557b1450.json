{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rabot\\\\WebstormProjects\\\\storysight\\\\src\\\\pages\\\\myprojects.js\",\n  _s = $RefreshSig$();\n// src/pages/myprojects.js\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./myprojects.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyProjects = () => {\n  _s();\n  const [images, setImages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    axios.get(\"http://localhost:3000/my-projects\").then(res => {\n      setImages(res.data);\n    }).catch(err => {\n      console.error(\"Ошибка при загрузке изображений:\", err);\n    }).finally(() => setLoading(false));\n  }, []);\n  const downloadImage = (url, title, id) => {\n    const link = document.createElement(\"a\");\n    link.href = url;\n    const safeTitle = title ? title.replace(/[^a-z0-9]/gi, '_').toLowerCase() : `image_${id}`;\n    link.download = `${safeTitle}.png`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // Группировка по storyline + дате создания (rounded до минуты)\n  // Безопасное получение ключа группировки\n  const groupedImages = images.reduce((acc, img) => {\n    const rawDate = img.created_at;\n    let datePart = 'неизвестно';\n    try {\n      const parsedDate = new Date(rawDate);\n      if (!isNaN(parsedDate)) {\n        datePart = parsedDate.toISOString().slice(0, 16);\n      }\n    } catch (err) {\n      console.warn('Невалидная дата у изображения с id', img.id);\n    }\n    const storylineText = img.storyline && img.storyline.trim() !== \"\" ? img.storyline.trim() : 'Без описания';\n    const key = `${datePart}||${storylineText}`;\n    acc[key] = acc[key] || [];\n    acc[key].push(img);\n    return acc;\n  }, {});\n\n  // Сортировка по дате (новые сверху)\n  const sortedGroups = Object.entries(groupedImages).sort((a, b) => b[0].localeCompare(a[0]));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"myprojects-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"myprojects-title\",\n      children: \"\\u041C\\u043E\\u0438 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"myprojects-message\",\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this) : sortedGroups.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"myprojects-message\",\n      children: \"\\u041F\\u043E\\u043A\\u0430 \\u043D\\u0435\\u0442 \\u043D\\u0438 \\u043E\\u0434\\u043D\\u043E\\u0433\\u043E \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this) : sortedGroups.map(([key, group], index) => {\n      const [storyline] = key.split(\"||\");\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"storyline\",\n          children: storyline\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"myprojects-grid\",\n          children: group.map(img => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"project-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: img.url,\n              alt: img.title || \"Изображение\",\n              className: \"project-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this), img.title && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"project-prompt\",\n              children: img.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"download-button\",\n              onClick: () => downloadImage(img.url, img.title, img.id),\n              children: \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this)]\n          }, img.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 27\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 7\n  }, this);\n};\n_s(MyProjects, \"QBslGb/yTBcjcjShOOciEvHlA24=\");\n_c = MyProjects;\nexport default MyProjects;\nvar _c;\n$RefreshReg$(_c, \"MyProjects\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","MyProjects","_s","images","setImages","loading","setLoading","get","then","res","data","catch","err","console","error","finally","downloadImage","url","title","id","link","document","createElement","href","safeTitle","replace","toLowerCase","download","body","appendChild","click","removeChild","groupedImages","reduce","acc","img","rawDate","created_at","datePart","parsedDate","Date","isNaN","toISOString","slice","warn","storylineText","storyline","trim","key","push","sortedGroups","Object","entries","sort","a","b","localeCompare","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","group","index","split","src","alt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/rabot/WebstormProjects/storysight/src/pages/myprojects.js"],"sourcesContent":["// src/pages/myprojects.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./myprojects.css\";\r\n\r\nconst MyProjects = () => {\r\n  const [images, setImages] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    axios\r\n        .get(\"http://localhost:3000/my-projects\")\r\n        .then((res) => {\r\n          setImages(res.data);\r\n        })\r\n        .catch((err) => {\r\n          console.error(\"Ошибка при загрузке изображений:\", err);\r\n        })\r\n        .finally(() => setLoading(false));\r\n  }, []);\r\n\r\n  const downloadImage = (url, title, id) => {\r\n    const link = document.createElement(\"a\");\r\n    link.href = url;\r\n    const safeTitle = title ? title.replace(/[^a-z0-9]/gi, '_').toLowerCase() : `image_${id}`;\r\n    link.download = `${safeTitle}.png`;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  // Группировка по storyline + дате создания (rounded до минуты)\r\n// Безопасное получение ключа группировки\r\n  const groupedImages = images.reduce((acc, img) => {\r\n    const rawDate = img.created_at;\r\n    let datePart = 'неизвестно';\r\n    try {\r\n      const parsedDate = new Date(rawDate);\r\n      if (!isNaN(parsedDate)) {\r\n        datePart = parsedDate.toISOString().slice(0, 16);\r\n      }\r\n    } catch (err) {\r\n      console.warn('Невалидная дата у изображения с id', img.id);\r\n    }\r\n\r\n    const storylineText = img.storyline && img.storyline.trim() !== \"\" ? img.storyline.trim() : 'Без описания';\r\n    const key = `${datePart}||${storylineText}`;\r\n    acc[key] = acc[key] || [];\r\n    acc[key].push(img);\r\n    return acc;\r\n  }, {});\r\n\r\n  // Сортировка по дате (новые сверху)\r\n  const sortedGroups = Object.entries(groupedImages).sort((a, b) => b[0].localeCompare(a[0]));\r\n\r\n  return (\r\n      <div className=\"myprojects-container\">\r\n        <h1 className=\"myprojects-title\">Мои проекты</h1>\r\n        {loading ? (\r\n            <p className=\"myprojects-message\">Загрузка...</p>\r\n        ) : sortedGroups.length === 0 ? (\r\n            <p className=\"myprojects-message\">Пока нет ни одного изображения</p>\r\n        ) : (\r\n            sortedGroups.map(([key, group], index) => {\r\n              const [ storyline] = key.split(\"||\");\r\n              return (\r\n                  <div key={index} className=\"project-group\">\r\n                    <div className=\"storyline\">{storyline}</div>\r\n                    <div className=\"myprojects-grid\">\r\n                      {group.map((img) => (\r\n                          <div key={img.id} className=\"project-card\">\r\n                            <img\r\n                                src={img.url}\r\n                                alt={img.title || \"Изображение\"}\r\n                                className=\"project-image\"\r\n                            />\r\n                            {img.title && (\r\n                                <div className=\"project-prompt\">{img.title}</div>\r\n                            )}\r\n                            <button\r\n                                className=\"download-button\"\r\n                                onClick={() => downloadImage(img.url, img.title, img.id)}\r\n                            >\r\n                              Скачать\r\n                            </button>\r\n                          </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n              );\r\n            })\r\n        )}\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default MyProjects;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rabot\\\\WebstormProjects\\\\storysight\\\\src\\\\pages\\\\myprojects.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./myprojects.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyProjects = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [images, setImages] = useState([]);\n  const [loadingUser, setLoadingUser] = useState(true);\n  const [loadingImages, setLoadingImages] = useState(false);\n\n  // Получаем пользователя при загрузке страницы\n  useEffect(() => {\n    axios.get(\"http://localhost:8000/auth/me\", {\n      withCredentials: true\n    }).then(res => setUser(res.data)).catch(() => setUser(null)).finally(() => setLoadingUser(false));\n  }, []);\n\n  // Загрузка изображений пользователя\n  useEffect(() => {\n    if (user) {\n      setLoadingImages(true);\n      axios.get(`http://localhost:8000/my-projects?telegram_id=${user.telegram_id}`, {\n        withCredentials: true\n      }).then(res => setImages(res.data)).catch(err => console.error(\"Ошибка при загрузке изображений:\", err)).finally(() => setLoadingImages(false));\n    }\n  }, [user]);\n\n  // Обработчик Telegram авторизации\n  useEffect(() => {\n    const handleTelegramAuth = async e => {\n      const telegramUser = e.detail;\n      try {\n        await axios.post(\"http://localhost:8000/auth/login\", telegramUser, {\n          withCredentials: true\n        });\n        const res = await axios.get(\"http://localhost:8000/auth/me\", {\n          withCredentials: true\n        });\n        setUser(res.data);\n      } catch (error) {\n        console.error(\"Ошибка авторизации через Telegram:\", error);\n      }\n    };\n    window.addEventListener(\"tg-auth\", handleTelegramAuth);\n    return () => {\n      window.removeEventListener(\"tg-auth\", handleTelegramAuth);\n    };\n  }, []);\n\n  // Скачать изображение\n  const downloadImage = (url, title, id) => {\n    const link = document.createElement(\"a\");\n    link.href = url;\n    const safeTitle = title ? title.replace(/[^a-z0-9]/gi, \"_\").toLowerCase() : `image_${id}`;\n    link.download = `${safeTitle}.png`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // Состояние: загрузка пользователя\n  if (loadingUser) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"myprojects-message\",\n    children: \"\\u041F\\u0440\\u043E\\u0432\\u0435\\u0440\\u043A\\u0430 \\u0430\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u0438...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 27\n  }, this);\n\n  // Состояние: не авторизован\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"myprojects-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"myprojects-title\",\n        children: \"\\u041C\\u043E\\u0438 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"myprojects-message\",\n        children: \"\\u041F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u0430\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0443\\u0439\\u0442\\u0435\\u0441\\u044C \\u0447\\u0435\\u0440\\u0435\\u0437 Telegram\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"telegram-login\",\n        className: \"telegram-login-button\",\n        children: /*#__PURE__*/_jsxDEV(\"script\", {\n          async: true,\n          src: \"https://telegram.org/js/telegram-widget.js?7\",\n          \"data-telegram-login\": \"zavod_worker_bot\" // <-- ЗАМЕНИ на имя твоего бота\n          ,\n          \"data-size\": \"large\",\n          \"data-userpic\": \"false\",\n          \"data-request-access\": \"write\",\n          \"data-on-auth\": \"onTelegramAuth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this);\n  }\n\n  // Состояние: загрузка изображений\n  if (loadingImages) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"myprojects-message\",\n    children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u043E\\u0432...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 29\n  }, this);\n\n  // Состояние: нет изображений\n  if (images.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"myprojects-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"myprojects-title\",\n        children: \"\\u041C\\u043E\\u0438 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"myprojects-message\",\n        children: \"\\u041F\\u043E\\u043A\\u0430 \\u043D\\u0435\\u0442 \\u043D\\u0438 \\u043E\\u0434\\u043D\\u043E\\u0433\\u043E \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this);\n  }\n\n  // Группировка и сортировка изображений\n  const groupedImages = images.reduce((acc, img) => {\n    var _img$storyline;\n    let datePart = \"неизвестно\";\n    try {\n      const parsedDate = new Date(img.created_at);\n      if (!isNaN(parsedDate)) {\n        datePart = parsedDate.toISOString().slice(0, 16);\n      }\n    } catch {}\n    const storylineText = ((_img$storyline = img.storyline) === null || _img$storyline === void 0 ? void 0 : _img$storyline.trim()) || \"Без описания\";\n    const key = `${datePart}||${storylineText}`;\n    if (!acc[key]) acc[key] = [];\n    acc[key].push(img);\n    return acc;\n  }, {});\n  const sortedGroups = Object.entries(groupedImages).sort((a, b) => {\n    const dateA = new Date(a[0].split(\"||\")[0]);\n    const dateB = new Date(b[0].split(\"||\")[0]);\n    return dateB - dateA;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"myprojects-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"myprojects-title\",\n      children: \"\\u041C\\u043E\\u0438 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this), sortedGroups.map(([key, group], index) => {\n      const [, storyline] = key.split(\"||\");\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"storyline\",\n          children: storyline\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"myprojects-grid\",\n          children: group.map(img => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"project-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: img.url,\n              alt: img.title || \"Изображение\",\n              className: \"project-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 25\n            }, this), img.title && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"project-prompt\",\n              children: img.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 39\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"download-button\",\n              onClick: () => downloadImage(img.url, img.title, img.id),\n              children: \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 25\n            }, this)]\n          }, img.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 23\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 7\n  }, this);\n};\n_s(MyProjects, \"r111wJk+vLhCRPqSDbWqQu3veR8=\");\n_c = MyProjects;\nexport default MyProjects;\nvar _c;\n$RefreshReg$(_c, \"MyProjects\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","MyProjects","_s","user","setUser","images","setImages","loadingUser","setLoadingUser","loadingImages","setLoadingImages","get","withCredentials","then","res","data","catch","finally","telegram_id","err","console","error","handleTelegramAuth","e","telegramUser","detail","post","window","addEventListener","removeEventListener","downloadImage","url","title","id","link","document","createElement","href","safeTitle","replace","toLowerCase","download","body","appendChild","click","removeChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","async","src","length","groupedImages","reduce","acc","img","_img$storyline","datePart","parsedDate","Date","created_at","isNaN","toISOString","slice","storylineText","storyline","trim","key","push","sortedGroups","Object","entries","sort","a","b","dateA","split","dateB","map","group","index","alt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/rabot/WebstormProjects/storysight/src/pages/myprojects.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./myprojects.css\";\r\n\r\nconst MyProjects = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [images, setImages] = useState([]);\r\n  const [loadingUser, setLoadingUser] = useState(true);\r\n  const [loadingImages, setLoadingImages] = useState(false);\r\n\r\n  // Получаем пользователя при загрузке страницы\r\n  useEffect(() => {\r\n    axios\r\n        .get(\"http://localhost:8000/auth/me\", { withCredentials: true })\r\n        .then((res) => setUser(res.data))\r\n        .catch(() => setUser(null))\r\n        .finally(() => setLoadingUser(false));\r\n  }, []);\r\n\r\n  // Загрузка изображений пользователя\r\n  useEffect(() => {\r\n    if (user) {\r\n      setLoadingImages(true);\r\n      axios\r\n          .get(`http://localhost:8000/my-projects?telegram_id=${user.telegram_id}`, {\r\n            withCredentials: true,\r\n          })\r\n          .then((res) => setImages(res.data))\r\n          .catch((err) => console.error(\"Ошибка при загрузке изображений:\", err))\r\n          .finally(() => setLoadingImages(false));\r\n    }\r\n  }, [user]);\r\n\r\n  // Обработчик Telegram авторизации\r\n  useEffect(() => {\r\n    const handleTelegramAuth = async (e) => {\r\n      const telegramUser = e.detail;\r\n\r\n      try {\r\n        await axios.post(\"http://localhost:8000/auth/login\", telegramUser, {\r\n          withCredentials: true,\r\n        });\r\n        const res = await axios.get(\"http://localhost:8000/auth/me\", {\r\n          withCredentials: true,\r\n        });\r\n        setUser(res.data);\r\n      } catch (error) {\r\n        console.error(\"Ошибка авторизации через Telegram:\", error);\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"tg-auth\", handleTelegramAuth);\r\n    return () => {\r\n      window.removeEventListener(\"tg-auth\", handleTelegramAuth);\r\n    };\r\n  }, []);\r\n\r\n  // Скачать изображение\r\n  const downloadImage = (url, title, id) => {\r\n    const link = document.createElement(\"a\");\r\n    link.href = url;\r\n    const safeTitle = title ? title.replace(/[^a-z0-9]/gi, \"_\").toLowerCase() : `image_${id}`;\r\n    link.download = `${safeTitle}.png`;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  // Состояние: загрузка пользователя\r\n  if (loadingUser) return <p className=\"myprojects-message\">Проверка авторизации...</p>;\r\n\r\n  // Состояние: не авторизован\r\n  if (!user) {\r\n    return (\r\n        <div className=\"myprojects-container\">\r\n          <h1 className=\"myprojects-title\">Мои проекты</h1>\r\n          <p className=\"myprojects-message\">Пожалуйста, авторизуйтесь через Telegram</p>\r\n          <div id=\"telegram-login\" className=\"telegram-login-button\">\r\n            <script\r\n                async\r\n                src=\"https://telegram.org/js/telegram-widget.js?7\"\r\n                data-telegram-login=\"zavod_worker_bot\" // <-- ЗАМЕНИ на имя твоего бота\r\n                data-size=\"large\"\r\n                data-userpic=\"false\"\r\n                data-request-access=\"write\"\r\n                data-on-auth=\"onTelegramAuth\"\r\n            ></script>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n\r\n  // Состояние: загрузка изображений\r\n  if (loadingImages) return <p className=\"myprojects-message\">Загрузка проектов...</p>;\r\n\r\n  // Состояние: нет изображений\r\n  if (images.length === 0) {\r\n    return (\r\n        <div className=\"myprojects-container\">\r\n          <h1 className=\"myprojects-title\">Мои проекты</h1>\r\n          <p className=\"myprojects-message\">Пока нет ни одного изображения</p>\r\n        </div>\r\n    );\r\n  }\r\n\r\n  // Группировка и сортировка изображений\r\n  const groupedImages = images.reduce((acc, img) => {\r\n    let datePart = \"неизвестно\";\r\n    try {\r\n      const parsedDate = new Date(img.created_at);\r\n      if (!isNaN(parsedDate)) {\r\n        datePart = parsedDate.toISOString().slice(0, 16);\r\n      }\r\n    } catch {}\r\n    const storylineText = img.storyline?.trim() || \"Без описания\";\r\n    const key = `${datePart}||${storylineText}`;\r\n    if (!acc[key]) acc[key] = [];\r\n    acc[key].push(img);\r\n    return acc;\r\n  }, {});\r\n\r\n  const sortedGroups = Object.entries(groupedImages).sort((a, b) => {\r\n    const dateA = new Date(a[0].split(\"||\")[0]);\r\n    const dateB = new Date(b[0].split(\"||\")[0]);\r\n    return dateB - dateA;\r\n  });\r\n\r\n  return (\r\n      <div className=\"myprojects-container\">\r\n        <h1 className=\"myprojects-title\">Мои проекты</h1>\r\n        {sortedGroups.map(([key, group], index) => {\r\n          const [, storyline] = key.split(\"||\");\r\n          return (\r\n              <div key={index} className=\"project-group\">\r\n                <div className=\"storyline\">{storyline}</div>\r\n                <div className=\"myprojects-grid\">\r\n                  {group.map((img) => (\r\n                      <div key={img.id} className=\"project-card\">\r\n                        <img src={img.url} alt={img.title || \"Изображение\"} className=\"project-image\" />\r\n                        {img.title && <div className=\"project-prompt\">{img.title}</div>}\r\n                        <button className=\"download-button\" onClick={() => downloadImage(img.url, img.title, img.id)}>\r\n                          Скачать\r\n                        </button>\r\n                      </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n          );\r\n        })}\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default MyProjects;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
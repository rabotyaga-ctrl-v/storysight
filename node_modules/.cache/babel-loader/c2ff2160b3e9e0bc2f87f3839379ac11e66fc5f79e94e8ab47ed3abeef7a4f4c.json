{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import'./generate-plot.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const plotTemplates=[{id:'template1',label:'Классическое приключение',tooltip:'Герой сталкивается с вызовом, проходит через испытания и возвращается изменённым.',text:'Герой отправляется в опасное путешествие, встречает врагов и друзей, находит силу в себе и возвращается победителем.'},{id:'template2',label:'История бренда',tooltip:'История продукта или компании, создающая эмоциональную связь с аудиторией.',text:'Небольшая компания начинает с идеи, преодолевает сложности и становится лидером на рынке, благодаря своему уникальному продукту.'},{id:'template3',label:'Фэнтезийная сказка',tooltip:'Магический мир, герой, зло и победа света.',text:'В волшебном королевстве юный маг отправляется на поиски древнего артефакта, чтобы спасти мир от тьмы.'}];export default function GeneratePlot(){const navigate=useNavigate();const[plotText,setPlotText]=useState('');const[selectedTemplate,setSelectedTemplate]=useState(null);const[expandedPrompt,setExpandedPrompt]=useState('');const[loadingExpand,setLoadingExpand]=useState(false);const[loadingGenerate,setLoadingGenerate]=useState(false);const[error,setError]=useState('');const handleTemplateClick=(id,text)=>{setSelectedTemplate(id);setPlotText(text);setExpandedPrompt('');setError('');};const handleExpand=async()=>{if(!plotText.trim()){alert('Пожалуйста, опишите сюжет вашей истории');return;}setLoadingExpand(true);setError('');setExpandedPrompt('');try{const response=await fetch('/plot/expand',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({text:plotText})});const data=await response.json();if(response.ok){setExpandedPrompt(data.expanded_prompt||'');}else{setError(data.error||'Ошибка при расширении сюжета');}}catch(_unused){setError('Ошибка сети при расширении сюжета');}finally{setLoadingExpand(false);}};const handleGenerate=async()=>{if(!expandedPrompt.trim()){alert('Промпт пустой');return;}setLoadingGenerate(true);setError('');try{const response=await fetch('/plot/generate',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({prompt:expandedPrompt})});const data=await response.json();if(response.ok){navigate('/plot-result',{state:{images:data.images}});}else{setError(data.error||'Ошибка при генерации');}}catch(_unused2){setError('Ошибка сети при генерации');}finally{setLoadingGenerate(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"plot-container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"plot-title\",children:\"\\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435 \\u0441\\u044E\\u0436\\u0435\\u0442\\u0430\"}),/*#__PURE__*/_jsxs(\"pre\",{className:\"plot-result\",children:[\"\\u041A\\u0442\\u043E \\u0433\\u043B\\u0430\\u0432\\u043D\\u044B\\u0439 \\u0433\\u0435\\u0440\\u043E\\u0439?\",'\\n',\"\\u041A\\u0430\\u043A \\u043D\\u0430\\u0447\\u0438\\u043D\\u0430\\u0435\\u0442\\u0441\\u044F \\u0438\\u0441\\u0442\\u043E\\u0440\\u0438\\u044F?\",'\\n',\"\\u041A\\u0430\\u043A\\u0438\\u0435 \\u0441\\u043E\\u0431\\u044B\\u0442\\u0438\\u044F \\u043F\\u0440\\u043E\\u0438\\u0441\\u0445\\u043E\\u0434\\u044F\\u0442?\",'\\n',\"\\u0427\\u0435\\u043C \\u0432\\u0441\\u0451 \\u0437\\u0430\\u043A\\u0430\\u043D\\u0447\\u0438\\u0432\\u0430\\u0435\\u0442\\u0441\\u044F?\",'\\n',\"\\u0415\\u0441\\u043B\\u0438 \\u0432\\u044B \\u043F\\u0438\\u0448\\u0435\\u0442\\u0435 \\u0434\\u043B\\u044F \\u0431\\u0440\\u0435\\u043D\\u0434\\u0430 \\u2013 \\u043E\\u043F\\u0438\\u0448\\u0438\\u0442\\u0435 \\u043F\\u0440\\u043E\\u0434\\u0443\\u043A\\u0442 \\u0438 \\u0435\\u0433\\u043E \\u043F\\u043E\\u043B\\u044C\\u0437\\u0443.\",'\\n',\"\\u041F\\u0440\\u0438\\u043C\\u0435\\u0440:\",'\\n',\"\\xAB\\u041C\\u043E\\u043B\\u043E\\u0434\\u043E\\u0439 \\u0431\\u0430\\u0440\\u0438\\u0441\\u0442\\u0430 \\u043E\\u0442\\u043A\\u0440\\u044B\\u0432\\u0430\\u0435\\u0442 \\u043A\\u043E\\u0444\\u0435\\u0439\\u043D\\u044E \\u0432 \\u043C\\u0435\\u0433\\u0430\\u043F\\u043E\\u043B\\u0438\\u0441\\u0435. \\u0421\\u043D\\u0430\\u0447\\u0430\\u043B\\u0430 \\u043A \\u043D\\u0435\\u043C\\u0443 \\u043D\\u0438\\u043A\\u0442\\u043E \\u043D\\u0435 \\u043F\\u0440\\u0438\\u0445\\u043E\\u0434\\u0438\\u0442. \\u041F\\u043E\\u0442\\u043E\\u043C \\u043E\\u043D \\u0441\\u043E\\u0437\\u0434\\u0430\\u0435\\u0442 \\u0443\\u043D\\u0438\\u043A\\u0430\\u043B\\u044C\\u043D\\u044B\\u0439 \\u0441\\u043E\\u0440\\u0442 \\u043A\\u043E\\u0444\\u0435, \\u0438 \\u043A \\u043D\\u0435\\u043C\\u0443 \\u0432\\u044B\\u0441\\u0442\\u0440\\u0430\\u0438\\u0432\\u0430\\u0435\\u0442\\u0441\\u044F \\u043E\\u0447\\u0435\\u0440\\u0435\\u0434\\u044C. \\u0424\\u0438\\u043D\\u0430\\u043B \\u2013 \\u0432\\u0442\\u043E\\u0440\\u0430\\u044F \\u043A\\u043E\\u0444\\u0435\\u0439\\u043D\\u044F \\u0438 \\u0437\\u0430\\u043A\\u0430\\u0442 \\u043D\\u0430 \\u0444\\u043E\\u043D\\u0435.\\xBB\"]}),/*#__PURE__*/_jsx(\"textarea\",{className:\"plot-textarea\",placeholder:\"\\u041E\\u043F\\u0438\\u0448\\u0438\\u0442\\u0435 \\u0441\\u044E\\u0436\\u0435\\u0442 \\u0432\\u0430\\u0448\\u0435\\u0439 \\u0438\\u0441\\u0442\\u043E\\u0440\\u0438\\u0438...\",value:plotText,onChange:e=>{setPlotText(e.target.value);setSelectedTemplate(null);setExpandedPrompt('');setError('');},disabled:loadingExpand||loadingGenerate}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"input-label\",children:\"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0448\\u0430\\u0431\\u043B\\u043E\\u043D \\u0441\\u044E\\u0436\\u0435\\u0442\\u0430:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"plot-templates-container\",children:plotTemplates.map(_ref=>{let{id,label,tooltip,text}=_ref;return/*#__PURE__*/_jsx(\"div\",{className:\"plot-template-box \".concat(selectedTemplate===id?'selected':''),title:tooltip,onClick:()=>handleTemplateClick(id,text),children:/*#__PURE__*/_jsx(\"div\",{children:label})},id);})})]}),!expandedPrompt&&/*#__PURE__*/_jsx(\"button\",{onClick:handleExpand,disabled:loadingExpand||loadingGenerate,className:\"plot-btn\",style:{marginTop:10},children:loadingExpand?'Обрабатываем сюжет...':'Улучшить сюжет'}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red',marginTop:10},children:error}),expandedPrompt&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u0420\\u0430\\u0441\\u0448\\u0438\\u0440\\u0435\\u043D\\u043D\\u044B\\u0439 \\u0441\\u044E\\u0436\\u0435\\u0442 (\\u043C\\u043E\\u0436\\u043D\\u043E \\u0440\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C):\"}),/*#__PURE__*/_jsx(\"textarea\",{className:\"plot-textarea\",value:expandedPrompt,onChange:e=>setExpandedPrompt(e.target.value),disabled:loadingGenerate,rows:6}),/*#__PURE__*/_jsx(\"button\",{onClick:handleGenerate,disabled:loadingGenerate,className:\"plot-btn\",style:{marginTop:10},children:loadingGenerate?'Генерируем изображения...':'Начать магию'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"plot-navigation-buttons\",style:{marginTop:20},children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/'),className:\"plot-btn\",disabled:loadingExpand||loadingGenerate,children:\"\\u041D\\u0430\\u0437\\u0430\\u0434\"})})]});}","map":{"version":3,"names":["React","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","plotTemplates","id","label","tooltip","text","GeneratePlot","navigate","plotText","setPlotText","selectedTemplate","setSelectedTemplate","expandedPrompt","setExpandedPrompt","loadingExpand","setLoadingExpand","loadingGenerate","setLoadingGenerate","error","setError","handleTemplateClick","handleExpand","trim","alert","response","fetch","method","headers","body","JSON","stringify","data","json","ok","expanded_prompt","_unused","handleGenerate","prompt","state","images","_unused2","className","children","placeholder","value","onChange","e","target","disabled","map","_ref","concat","title","onClick","style","marginTop","color","rows"],"sources":["/root/diplomka/src/pages/GeneratePlot.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './generate-plot.css';\n\nconst plotTemplates = [\n    {\n        id: 'template1',\n        label: 'Классическое приключение',\n        tooltip: 'Герой сталкивается с вызовом, проходит через испытания и возвращается изменённым.',\n        text: 'Герой отправляется в опасное путешествие, встречает врагов и друзей, находит силу в себе и возвращается победителем.'\n    },\n    {\n        id: 'template2',\n        label: 'История бренда',\n        tooltip: 'История продукта или компании, создающая эмоциональную связь с аудиторией.',\n        text: 'Небольшая компания начинает с идеи, преодолевает сложности и становится лидером на рынке, благодаря своему уникальному продукту.'\n    },\n    {\n        id: 'template3',\n        label: 'Фэнтезийная сказка',\n        tooltip: 'Магический мир, герой, зло и победа света.',\n        text: 'В волшебном королевстве юный маг отправляется на поиски древнего артефакта, чтобы спасти мир от тьмы.'\n    },\n];\n\nexport default function GeneratePlot() {\n    const navigate = useNavigate();\n\n    const [plotText, setPlotText] = useState('');\n    const [selectedTemplate, setSelectedTemplate] = useState(null);\n    const [expandedPrompt, setExpandedPrompt] = useState('');\n    const [loadingExpand, setLoadingExpand] = useState(false);\n    const [loadingGenerate, setLoadingGenerate] = useState(false);\n    const [error, setError] = useState('');\n\n    const handleTemplateClick = (id, text) => {\n        setSelectedTemplate(id);\n        setPlotText(text);\n        setExpandedPrompt('');\n        setError('');\n    };\n\n    const handleExpand = async () => {\n        if (!plotText.trim()) {\n            alert('Пожалуйста, опишите сюжет вашей истории');\n            return;\n        }\n        setLoadingExpand(true);\n        setError('');\n        setExpandedPrompt('');\n        try {\n            const response = await fetch('/plot/expand', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ text: plotText }),\n            });\n            const data = await response.json();\n            if (response.ok) {\n                setExpandedPrompt(data.expanded_prompt || '');\n            } else {\n                setError(data.error || 'Ошибка при расширении сюжета');\n            }\n        } catch {\n            setError('Ошибка сети при расширении сюжета');\n        } finally {\n            setLoadingExpand(false);\n        }\n    };\n\n    const handleGenerate = async () => {\n        if (!expandedPrompt.trim()) {\n            alert('Промпт пустой');\n            return;\n        }\n        setLoadingGenerate(true);\n        setError('');\n        try {\n            const response = await fetch('/plot/generate', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ prompt: expandedPrompt }),\n            });\n            const data = await response.json();\n            if (response.ok) {\n                navigate('/plot-result', { state: { images: data.images } });\n            } else {\n                setError(data.error || 'Ошибка при генерации');\n            }\n        } catch {\n            setError('Ошибка сети при генерации');\n        } finally {\n            setLoadingGenerate(false);\n        }\n    };\n\n    return (\n        <div className=\"plot-container\">\n            <h1 className=\"plot-title\">Создание сюжета</h1>\n\n            <pre className=\"plot-result\">\n        Кто главный герой?{'\\n'}\n                Как начинается история?{'\\n'}\n                Какие события происходят?{'\\n'}\n                Чем всё заканчивается?{'\\n'}\n                Если вы пишете для бренда – опишите продукт и его пользу.{'\\n'}\n                Пример:{'\\n'}\n                «Молодой бариста открывает кофейню в мегаполисе. Сначала к нему никто не приходит. Потом он создает уникальный сорт кофе, и к нему выстраивается очередь. Финал – вторая кофейня и закат на фоне.»\n            </pre>\n\n            <textarea\n                className=\"plot-textarea\"\n                placeholder=\"Опишите сюжет вашей истории...\"\n                value={plotText}\n                onChange={(e) => {\n                    setPlotText(e.target.value);\n                    setSelectedTemplate(null);\n                    setExpandedPrompt('');\n                    setError('');\n                }}\n                disabled={loadingExpand || loadingGenerate}\n            />\n\n            <div className=\"input-group\">\n                <label className=\"input-label\">Выберите шаблон сюжета:</label>\n                <div className=\"plot-templates-container\">\n                    {plotTemplates.map(({ id, label, tooltip, text }) => (\n                        <div\n                            key={id}\n                            className={`plot-template-box ${selectedTemplate === id ? 'selected' : ''}`}\n                            title={tooltip}\n                            onClick={() => handleTemplateClick(id, text)}\n                        >\n                            <div>{label}</div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n\n            {!expandedPrompt && (\n                <button\n                    onClick={handleExpand}\n                    disabled={loadingExpand || loadingGenerate}\n                    className=\"plot-btn\"\n                    style={{ marginTop: 10 }}\n                >\n                    {loadingExpand ? 'Обрабатываем сюжет...' : 'Улучшить сюжет'}\n                </button>\n            )}\n\n            {error && <p style={{ color: 'red', marginTop: 10 }}>{error}</p>}\n\n            {expandedPrompt && (\n                <>\n                    <h3>Расширенный сюжет (можно редактировать):</h3>\n                    <textarea\n                        className=\"plot-textarea\"\n                        value={expandedPrompt}\n                        onChange={(e) => setExpandedPrompt(e.target.value)}\n                        disabled={loadingGenerate}\n                        rows={6}\n                    />\n                    <button\n                        onClick={handleGenerate}\n                        disabled={loadingGenerate}\n                        className=\"plot-btn\"\n                        style={{ marginTop: 10 }}\n                    >\n                        {loadingGenerate ? 'Генерируем изображения...' : 'Начать магию'}\n                    </button>\n                </>\n            )}\n\n            <div className=\"plot-navigation-buttons\" style={{ marginTop: 20 }}>\n                <button\n                    onClick={() => navigate('/')}\n                    className=\"plot-btn\"\n                    disabled={loadingExpand || loadingGenerate}\n                >\n                    Назад\n                </button>\n            </div>\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}